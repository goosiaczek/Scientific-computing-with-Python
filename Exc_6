
"""EXERCISE 6.1
Create 3D vectors as a Python class."""

import math

class Vector():
    """Klasa służąca do reprezentacji wektorów w trzech wymiarach"""

    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z

    def __repr__(self):
        return f"Vector ({self.x}, {self.y}, {self.z})"

    def __eq__(self, other):
        if self.x == other.x and self.y == other.y and self.z == other.z:
            return True
        else:
            return False

    def __ne__(self, other):
        return not self == other

    def __add__(self, other):
        return Vector(self.x + other.x, self.y + other.y, self.z + other.z)

    def __sub__(self, other):
        return Vector(self.x - other.x, self.y - other.y, self.z - other.z)

    def __mul__(self, other):
        return self.x * other.x + self.y * other.y + self.z * other.z

    def cross(self, other):
        return Vector(self.y * other.z - self.z * other.y,
            self.z * other.x - self.x * other.z,
            self.x * other.y - self.y * other.x)

    def length(self):
        return math.sqrt(self.x ** 2 + self.y ** 2 + self.z ** 2)

    def __hash__(self):
        return hash((self.x, self.y, self.z))

    def is_zero(self):
        if self.x == 0 and self.y == 0 and self.z == 0:
            return True
        else:
            return False
